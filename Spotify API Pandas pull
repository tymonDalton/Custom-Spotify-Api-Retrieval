import pandas as pd
import numpy as np
import plotly.express as px
import spotipy
from spotipy.oauth2 import SpotifyClientCredentials


#spotify authorization that you must input personal api for token pulls
cid = '**input**'
secret = '**input**'
client_credentials_manager = SpotifyClientCredentials(client_id=cid, client_secret=secret)
sp = spotipy.Spotify(client_credentials_manager = client_credentials_manager)




### for loop to easily swap playlist and credit:Samantha Jones, LinkedIn
def call_playlist(creator, playlist_id):

    playlist_features_list = ["artist","album","track_name",  "track_id","danceability","energy","key","loudness","mode", "speechiness","instrumentalness","liveness","valence","tempo", "duration_ms","time_signature"]

    playlist_df = pd.DataFrame(columns = playlist_features_list)  
    # loop for pulling more than 100 songs 
    playlist = []
    offsetloop = 0
    while True:
        print("inside loop offset,offset=%d" % offsetloop) #loading screen/ code works affirmations
        playlist1 = sp.user_playlist_tracks(creator, playlist_id, fields=None, limit=100, offset=offsetloop, market=None)["items"]
        if len(playlist1)==0:
            break
        offsetloop = offsetloop + 100
        playlist = playlist + playlist1
   
    #my brute force
   #   playlist2 = sp.user_playlist_tracks(creator, playlist_id, fields=None, limit=100, offset=100, market=None)["items"]
    #    playlist3 = sp.user_playlist_tracks(creator, playlist_id, fields=None, limit=100, offset=200, market=None)["items"]
    #    playlist4 = sp.user_playlist_tracks(creator, playlist_id, fields=None, limit=100, offset=300, market=None)["items"]
    #playlist = playlist1 + playlist2 + playlist3 + playlist4 + 
    for track in playlist:
        # Create empty dict
        playlist_features = {}
        # Get metadata
        playlist_features["artist"] = track["track"]["album"]["artists"][0]["name"]
        playlist_features["album"] = track["track"]["album"]["name"]
        playlist_features["track_name"] = track["track"]["name"]
        playlist_features["track_id"] = track["track"]["id"]
        
        # Get audio features
        audio_features = sp.audio_features(playlist_features["track_id"])[0]
        for feature in playlist_features_list[4:]:
            playlist_features[feature] = audio_features[feature]
        
        # Concat the dfs
        track_df = pd.DataFrame(playlist_features, index = [0])
        playlist_df = pd.concat([playlist_df, track_df], ignore_index = True)
    return playlist_df


###  input playlist to print df (user/spotify,playlist UID)  

# df = (call_playlist("Tymon Dalton","6ZJGYT2AYXr683qI2OxoSY"))
# print(df.to_string())
# dfVal = df['valence'].describe()
# print(dfVal)

# ###df.to_csv('out.csv') good if no unicode
# df.to_csv('file.csv',encoding='utf-8-sig') #file.csv rename

df1 = (call_playlist("Tymon Dalton","7mmbCvQT3zrgXsq4BLwIwj"))
print(df1.to_string())
# dfVal = df1['valence'].describe()
# print(dfVal)



# df1.to_csv('bigdata.csv',encoding='utf-8-sig') #file.csv rename
